{
	"data": {
		"after": "t3_1dm01o1",
		"before": null,
		"children": [
			{
				"data": {
					"all_awardings": [],
					"allow_live_comments": false,
					"approved_at_utc": null,
					"approved_by": null,
					"archived": false,
					"author": "AutoModerator",
					"author_flair_background_color": null,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"author_flair_template_id": null,
					"author_flair_text": null,
					"author_flair_text_color": null,
					"author_flair_type": "text",
					"author_fullname": "t2_6l4z3",
					"author_is_blocked": false,
					"author_patreon_flair": false,
					"author_premium": true,
					"awarders": [],
					"banned_at_utc": null,
					"banned_by": null,
					"can_gild": false,
					"can_mod_post": false,
					"category": null,
					"clicked": false,
					"content_categories": null,
					"contest_mode": false,
					"created": 1718496009.0,
					"created_utc": 1718496009.0,
					"discussion_type": null,
					"distinguished": "moderator",
					"domain": "self.Python",
					"downs": 0,
					"edited": false,
					"gilded": 0,
					"gildings": {},
					"hidden": false,
					"hide_score": false,
					"id": "1dgv2s3",
					"is_created_from_ads_ui": false,
					"is_crosspostable": true,
					"is_meta": false,
					"is_original_content": false,
					"is_reddit_media_domain": false,
					"is_robot_indexable": true,
					"is_self": true,
					"is_video": false,
					"likes": null,
					"link_flair_background_color": "#00a6a5",
					"link_flair_css_class": "daily-thread",
					"link_flair_richtext": [
						{
							"a": ":pythonLogo:",
							"e": "emoji",
							"u": "https://emoji.redditmedia.com/8yxdpg6xxnr71_t5_2qh0y/pythonLogo"
						},
						{ "e": "text", "t": " Daily Thread" }
					],
					"link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1",
					"link_flair_text": ":pythonLogo: Daily Thread",
					"link_flair_text_color": "light",
					"link_flair_type": "richtext",
					"locked": false,
					"media": null,
					"media_embed": {},
					"media_only": false,
					"mod_note": null,
					"mod_reason_by": null,
					"mod_reason_title": null,
					"mod_reports": [],
					"name": "t3_1dgv2s3",
					"no_follow": false,
					"num_comments": 15,
					"num_crossposts": 0,
					"num_reports": null,
					"over_18": false,
					"parent_whitelist_status": "all_ads",
					"permalink": "/r/Python/comments/1dgv2s3/sunday_daily_thread_whats_everyone_working_on/",
					"pinned": false,
					"pwls": 6,
					"quarantine": false,
					"removal_reason": null,
					"removed_by": null,
					"removed_by_category": null,
					"report_reasons": null,
					"saved": false,
					"score": 6,
					"secure_media": null,
					"secure_media_embed": {},
					"selftext": "# Weekly Thread: What's Everyone Working On This Week? \ud83d\udee0\ufe0f\n\nHello /r/Python! It's time to share what you've been working on! Whether it's a work-in-progress, a completed masterpiece, or just a rough idea, let us know what you're up to!\n\n## How it Works:\n\n1. **Show &amp; Tell**: Share your current projects, completed works, or future ideas.\n2. **Discuss**: Get feedback, find collaborators, or just chat about your project.\n3. **Inspire**: Your project might inspire someone else, just as you might get inspired here.\n\n## Guidelines:\n\n* Feel free to include as many details as you'd like. Code snippets, screenshots, and links are all welcome.\n* Whether it's your job, your hobby, or your passion project, all Python-related work is welcome here.\n\n## Example Shares:\n\n1. **Machine Learning Model**: Working on a ML model to predict stock prices. Just cracked a 90% accuracy rate!\n2. **Web Scraping**: Built a script to scrape and analyze news articles. It's helped me understand media bias better.\n3. **Automation**: Automated my home lighting with Python and Raspberry Pi. My life has never been easier!\n\nLet's build and grow together! Share your journey and learn from others. Happy coding! \ud83c\udf1f",
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Weekly Thread: What&amp;#39;s Everyone Working On This Week? \ud83d\udee0\ufe0f&lt;/h1&gt;\n\n&lt;p&gt;Hello &lt;a href=\"/r/Python\"&gt;/r/Python&lt;/a&gt;! It&amp;#39;s time to share what you&amp;#39;ve been working on! Whether it&amp;#39;s a work-in-progress, a completed masterpiece, or just a rough idea, let us know what you&amp;#39;re up to!&lt;/p&gt;\n\n&lt;h2&gt;How it Works:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Show &amp;amp; Tell&lt;/strong&gt;: Share your current projects, completed works, or future ideas.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Discuss&lt;/strong&gt;: Get feedback, find collaborators, or just chat about your project.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Inspire&lt;/strong&gt;: Your project might inspire someone else, just as you might get inspired here.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Guidelines:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Feel free to include as many details as you&amp;#39;d like. Code snippets, screenshots, and links are all welcome.&lt;/li&gt;\n&lt;li&gt;Whether it&amp;#39;s your job, your hobby, or your passion project, all Python-related work is welcome here.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example Shares:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Machine Learning Model&lt;/strong&gt;: Working on a ML model to predict stock prices. Just cracked a 90% accuracy rate!&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Web Scraping&lt;/strong&gt;: Built a script to scrape and analyze news articles. It&amp;#39;s helped me understand media bias better.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Automated my home lighting with Python and Raspberry Pi. My life has never been easier!&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Let&amp;#39;s build and grow together! Share your journey and learn from others. Happy coding! \ud83c\udf1f&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"send_replies": false,
					"spoiler": false,
					"stickied": true,
					"subreddit": "Python",
					"subreddit_id": "t5_2qh0y",
					"subreddit_name_prefixed": "r/Python",
					"subreddit_subscribers": 1244574,
					"subreddit_type": "public",
					"suggested_sort": null,
					"thumbnail": "self",
					"thumbnail_height": null,
					"thumbnail_width": null,
					"title": "Sunday Daily Thread: What's everyone working on this week?",
					"top_awarded_type": null,
					"total_awards_received": 0,
					"treatment_tags": [],
					"ups": 6,
					"upvote_ratio": 0.75,
					"url": "https://www.reddit.com/r/Python/comments/1dgv2s3/sunday_daily_thread_whats_everyone_working_on/",
					"user_reports": [],
					"view_count": null,
					"visited": false,
					"whitelist_status": "all_ads",
					"wls": 6
				},
				"kind": "t3"
			},
			{
				"data": {
					"all_awardings": [],
					"allow_live_comments": false,
					"approved_at_utc": null,
					"approved_by": null,
					"archived": false,
					"author": "AutoModerator",
					"author_flair_background_color": null,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"author_flair_template_id": null,
					"author_flair_text": null,
					"author_flair_text_color": null,
					"author_flair_type": "text",
					"author_fullname": "t2_6l4z3",
					"author_is_blocked": false,
					"author_patreon_flair": false,
					"author_premium": true,
					"awarders": [],
					"banned_at_utc": null,
					"banned_by": null,
					"can_gild": false,
					"can_mod_post": false,
					"category": null,
					"clicked": false,
					"content_categories": null,
					"contest_mode": false,
					"created": 1719014412.0,
					"created_utc": 1719014412.0,
					"discussion_type": null,
					"distinguished": null,
					"domain": "self.Python",
					"downs": 0,
					"edited": false,
					"gilded": 0,
					"gildings": {},
					"hidden": false,
					"hide_score": false,
					"id": "1dlig0j",
					"is_created_from_ads_ui": false,
					"is_crosspostable": true,
					"is_meta": false,
					"is_original_content": false,
					"is_reddit_media_domain": false,
					"is_robot_indexable": true,
					"is_self": true,
					"is_video": false,
					"likes": null,
					"link_flair_background_color": "#00a6a5",
					"link_flair_css_class": "daily-thread",
					"link_flair_richtext": [
						{
							"a": ":pythonLogo:",
							"e": "emoji",
							"u": "https://emoji.redditmedia.com/8yxdpg6xxnr71_t5_2qh0y/pythonLogo"
						},
						{ "e": "text", "t": " Daily Thread" }
					],
					"link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1",
					"link_flair_text": ":pythonLogo: Daily Thread",
					"link_flair_text_color": "light",
					"link_flair_type": "richtext",
					"locked": false,
					"media": null,
					"media_embed": {},
					"media_only": false,
					"mod_note": null,
					"mod_reason_by": null,
					"mod_reason_title": null,
					"mod_reports": [],
					"name": "t3_1dlig0j",
					"no_follow": false,
					"num_comments": 0,
					"num_crossposts": 0,
					"num_reports": null,
					"over_18": false,
					"parent_whitelist_status": "all_ads",
					"permalink": "/r/Python/comments/1dlig0j/saturday_daily_thread_resource_request_and/",
					"pinned": false,
					"pwls": 6,
					"quarantine": false,
					"removal_reason": null,
					"removed_by": null,
					"removed_by_category": null,
					"report_reasons": null,
					"saved": false,
					"score": 6,
					"secure_media": null,
					"secure_media_embed": {},
					"selftext": "# Weekly Thread: Resource Request and Sharing \ud83d\udcda\n\nStumbled upon a useful Python resource? Or are you looking for a guide on a specific topic? Welcome to the Resource Request and Sharing thread!\n\n## How it Works:\n\n1. **Request**: Can't find a resource on a particular topic? Ask here!\n2. **Share**: Found something useful? Share it with the community.\n3. **Review**: Give or get opinions on Python resources you've used.\n\n## Guidelines:\n\n* Please include the type of resource (e.g., book, video, article) and the topic.\n* Always be respectful when reviewing someone else's shared resource.\n\n## Example Shares:\n\n1. **Book**: [\"Fluent Python\"](https://www.amazon.com/Fluent-Python-Concise-Effective-Programming/dp/1491946008) \\- Great for understanding Pythonic idioms.\n2. **Video**: [Python Data Structures](https://www.youtube.com/watch?v=pkYVOmU3MgA) \\- Excellent overview of Python's built-in data structures.\n3. **Article**: [Understanding Python Decorators](https://realpython.com/primer-on-python-decorators/) \\- A deep dive into decorators.\n\n## Example Requests:\n\n1. **Looking for**: Video tutorials on web scraping with Python.\n2. **Need**: Book recommendations for Python machine learning.\n\nShare the knowledge, enrich the community. Happy learning! \ud83c\udf1f",
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Weekly Thread: Resource Request and Sharing \ud83d\udcda&lt;/h1&gt;\n\n&lt;p&gt;Stumbled upon a useful Python resource? Or are you looking for a guide on a specific topic? Welcome to the Resource Request and Sharing thread!&lt;/p&gt;\n\n&lt;h2&gt;How it Works:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Request&lt;/strong&gt;: Can&amp;#39;t find a resource on a particular topic? Ask here!&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Share&lt;/strong&gt;: Found something useful? Share it with the community.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Review&lt;/strong&gt;: Give or get opinions on Python resources you&amp;#39;ve used.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Guidelines:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Please include the type of resource (e.g., book, video, article) and the topic.&lt;/li&gt;\n&lt;li&gt;Always be respectful when reviewing someone else&amp;#39;s shared resource.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example Shares:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Book&lt;/strong&gt;: &lt;a href=\"https://www.amazon.com/Fluent-Python-Concise-Effective-Programming/dp/1491946008\"&gt;&amp;quot;Fluent Python&amp;quot;&lt;/a&gt; - Great for understanding Pythonic idioms.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Video&lt;/strong&gt;: &lt;a href=\"https://www.youtube.com/watch?v=pkYVOmU3MgA\"&gt;Python Data Structures&lt;/a&gt; - Excellent overview of Python&amp;#39;s built-in data structures.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Article&lt;/strong&gt;: &lt;a href=\"https://realpython.com/primer-on-python-decorators/\"&gt;Understanding Python Decorators&lt;/a&gt; - A deep dive into decorators.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Example Requests:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Looking for&lt;/strong&gt;: Video tutorials on web scraping with Python.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Need&lt;/strong&gt;: Book recommendations for Python machine learning.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Share the knowledge, enrich the community. Happy learning! \ud83c\udf1f&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"send_replies": false,
					"spoiler": false,
					"stickied": true,
					"subreddit": "Python",
					"subreddit_id": "t5_2qh0y",
					"subreddit_name_prefixed": "r/Python",
					"subreddit_subscribers": 1244574,
					"subreddit_type": "public",
					"suggested_sort": null,
					"thumbnail": "self",
					"thumbnail_height": null,
					"thumbnail_width": null,
					"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread",
					"top_awarded_type": null,
					"total_awards_received": 0,
					"treatment_tags": [],
					"ups": 6,
					"upvote_ratio": 0.8,
					"url": "https://www.reddit.com/r/Python/comments/1dlig0j/saturday_daily_thread_resource_request_and/",
					"user_reports": [],
					"view_count": null,
					"visited": false,
					"whitelist_status": "all_ads",
					"wls": 6
				},
				"kind": "t3"
			},
			{
				"data": {
					"all_awardings": [],
					"allow_live_comments": false,
					"approved_at_utc": null,
					"approved_by": null,
					"archived": false,
					"author": "fesch2",
					"author_flair_background_color": null,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"author_flair_template_id": null,
					"author_flair_text": null,
					"author_flair_text_color": null,
					"author_flair_type": "text",
					"author_fullname": "t2_9ne57ym8x",
					"author_is_blocked": false,
					"author_patreon_flair": false,
					"author_premium": false,
					"awarders": [],
					"banned_at_utc": null,
					"banned_by": null,
					"can_gild": false,
					"can_mod_post": false,
					"category": null,
					"clicked": false,
					"content_categories": null,
					"contest_mode": false,
					"created": 1719075210.0,
					"created_utc": 1719075210.0,
					"discussion_type": null,
					"distinguished": null,
					"domain": "self.Python",
					"downs": 0,
					"edited": 1719080100.0,
					"gilded": 0,
					"gildings": {},
					"hidden": false,
					"hide_score": false,
					"id": "1dm01o1",
					"is_created_from_ads_ui": false,
					"is_crosspostable": true,
					"is_meta": false,
					"is_original_content": false,
					"is_reddit_media_domain": false,
					"is_robot_indexable": true,
					"is_self": true,
					"is_video": false,
					"likes": null,
					"link_flair_background_color": "#ff66ac",
					"link_flair_css_class": "showcase",
					"link_flair_richtext": [{ "e": "text", "t": "Showcase" }],
					"link_flair_template_id": "f35fb004-c1ff-11ee-8305-565bc5d0cc73",
					"link_flair_text": "Showcase",
					"link_flair_text_color": "light",
					"link_flair_type": "richtext",
					"locked": false,
					"media": null,
					"media_embed": {},
					"media_only": false,
					"mod_note": null,
					"mod_reason_by": null,
					"mod_reason_title": null,
					"mod_reports": [],
					"name": "t3_1dm01o1",
					"no_follow": false,
					"num_comments": 5,
					"num_crossposts": 0,
					"num_reports": null,
					"over_18": false,
					"parent_whitelist_status": "all_ads",
					"permalink": "/r/Python/comments/1dm01o1/discoverplugins_track_which_plugins_are_installed/",
					"pinned": false,
					"post_hint": "self",
					"preview": {
						"enabled": false,
						"images": [
							{
								"id": "rw6T18rGaOkryFOYSa8BWgwB6cHb1wQukX4wT2d1lAk",
								"resolutions": [
									{
										"height": 54,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=20ad117bcd2590294aad2edd6e50338d57f70ac5",
										"width": 108
									},
									{
										"height": 108,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=546b1dec755c7ba114f335c657a4c8a35b3aed05",
										"width": 216
									},
									{
										"height": 160,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1025f1cf3998ec858279e8acaa79ec137d1c0b8d",
										"width": 320
									},
									{
										"height": 320,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a84357f94c3bb9eed6932028ad8e2c8069791bd9",
										"width": 640
									},
									{
										"height": 480,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e56b33c843184d21f16c2ebacfbdfd82c5c0a869",
										"width": 960
									},
									{
										"height": 540,
										"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e5b2263a1159adba418d65d93428ecf2c3fc9bc3",
										"width": 1080
									}
								],
								"source": {
									"height": 600,
									"url": "https://external-preview.redd.it/NtwAGm8rmUd2tzGFNAzaXWDlSkybNTL65a4mK80XMEk.jpg?auto=webp&amp;s=c0009ebe053de44c2d1c02625456b357c2f7f302",
									"width": 1200
								},
								"variants": {}
							}
						]
					},
					"pwls": 6,
					"quarantine": false,
					"removal_reason": null,
					"removed_by": null,
					"removed_by_category": null,
					"report_reasons": null,
					"saved": false,
					"score": 1,
					"secure_media": null,
					"secure_media_embed": {},
					"selftext": "# What my project does\n\n`discover-plugins` is a simple CLI tool that lets you list and filter ~~plugins~~ entrypoints installed into a python environment.\n\nI recently had to track down a bug that I ultimately resulted from a plugin I had installed into my environment.  To my surprise, there was no easy way to list which kind of plugins were installed, so I decided to build my own tool.\n\n# Target Audience\n\n`discover-plugins` is intended as a debugging tool for those times when you are not quite sure which plugins are currently part of your python environment.\n\n# Installation\n\n    pipx install discover-plugins\n\n# Usage\n\nFind all installed plugins related to `pytest` (the relevant group name is `pytest11`):\n\n    discover-plugins --group pytest11\n\nThe tool defaults to use the first python interpreter on your path, you can optionally specify which interpreter to use with the `--interpreter` flag.\n\nThe output will list all entrypoints belonging to the `pytest11` group. For example, if you had installed a single `pytest` plugin (`pytest-aws-apigateway`) the output would look like this:\n\n    {\n      \"pytest11\": [\n        {\n          \"name\": \"pytest_httpx\",\n          \"group\": \"pytest11\",\n          \"value\": \"pytest_httpx\"\n        },\n        {\n          \"name\": \"anyio\",\n          \"group\": \"pytest11\",\n          \"value\": \"anyio.pytest_plugin\"\n        },\n        {\n          \"name\": \"pytest-aws-apigateway\",\n          \"group\": \"pytest11\",\n          \"value\": \"pytest_aws_apigateway.plugin\"\n        }\n      ]\n    }\n\n# Links\n\nLink to GitHub: [https://github.com/felixscherz/discover-plugins](https://github.com/felixscherz/discover-plugins)\n\nPyPI: [https://pypi.org/project/discover-plugins/](https://pypi.org/project/discover-plugins/)\n\nLet me know if the tool helped you out!\n\nCheers!",
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;What my project does&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;discover-plugins&lt;/code&gt; is a simple CLI tool that lets you list and filter &lt;del&gt;plugins&lt;/del&gt; entrypoints installed into a python environment.&lt;/p&gt;\n\n&lt;p&gt;I recently had to track down a bug that I ultimately resulted from a plugin I had installed into my environment.  To my surprise, there was no easy way to list which kind of plugins were installed, so I decided to build my own tool.&lt;/p&gt;\n\n&lt;h1&gt;Target Audience&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;discover-plugins&lt;/code&gt; is intended as a debugging tool for those times when you are not quite sure which plugins are currently part of your python environment.&lt;/p&gt;\n\n&lt;h1&gt;Installation&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;pipx install discover-plugins\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Usage&lt;/h1&gt;\n\n&lt;p&gt;Find all installed plugins related to &lt;code&gt;pytest&lt;/code&gt; (the relevant group name is &lt;code&gt;pytest11&lt;/code&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;discover-plugins --group pytest11\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The tool defaults to use the first python interpreter on your path, you can optionally specify which interpreter to use with the &lt;code&gt;--interpreter&lt;/code&gt; flag.&lt;/p&gt;\n\n&lt;p&gt;The output will list all entrypoints belonging to the &lt;code&gt;pytest11&lt;/code&gt; group. For example, if you had installed a single &lt;code&gt;pytest&lt;/code&gt; plugin (&lt;code&gt;pytest-aws-apigateway&lt;/code&gt;) the output would look like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  &amp;quot;pytest11&amp;quot;: [\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;pytest_httpx&amp;quot;,\n      &amp;quot;group&amp;quot;: &amp;quot;pytest11&amp;quot;,\n      &amp;quot;value&amp;quot;: &amp;quot;pytest_httpx&amp;quot;\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;anyio&amp;quot;,\n      &amp;quot;group&amp;quot;: &amp;quot;pytest11&amp;quot;,\n      &amp;quot;value&amp;quot;: &amp;quot;anyio.pytest_plugin&amp;quot;\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;pytest-aws-apigateway&amp;quot;,\n      &amp;quot;group&amp;quot;: &amp;quot;pytest11&amp;quot;,\n      &amp;quot;value&amp;quot;: &amp;quot;pytest_aws_apigateway.plugin&amp;quot;\n    }\n  ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Links&lt;/h1&gt;\n\n&lt;p&gt;Link to GitHub: &lt;a href=\"https://github.com/felixscherz/discover-plugins\"&gt;https://github.com/felixscherz/discover-plugins&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PyPI: &lt;a href=\"https://pypi.org/project/discover-plugins/\"&gt;https://pypi.org/project/discover-plugins/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Let me know if the tool helped you out!&lt;/p&gt;\n\n&lt;p&gt;Cheers!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"send_replies": true,
					"spoiler": false,
					"stickied": false,
					"subreddit": "Python",
					"subreddit_id": "t5_2qh0y",
					"subreddit_name_prefixed": "r/Python",
					"subreddit_subscribers": 1244574,
					"subreddit_type": "public",
					"suggested_sort": null,
					"thumbnail": "self",
					"thumbnail_height": null,
					"thumbnail_width": null,
					"title": "discover-plugins - track which plugins are installed into your python environment",
					"top_awarded_type": null,
					"total_awards_received": 0,
					"treatment_tags": [],
					"ups": 1,
					"upvote_ratio": 0.53,
					"url": "https://www.reddit.com/r/Python/comments/1dm01o1/discoverplugins_track_which_plugins_are_installed/",
					"user_reports": [],
					"view_count": null,
					"visited": false,
					"whitelist_status": "all_ads",
					"wls": 6
				},
				"kind": "t3"
			}
		],
		"dist": 3,
		"geo_filter": null,
		"modhash": null
	},
	"kind": "Listing"
}
